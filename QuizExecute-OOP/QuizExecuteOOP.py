{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e343e1e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "class AnswerQuestion:\n",
    "    answerQuestionList = list() \n",
    "\n",
    "    def __init__(self,answer,question):\n",
    "        self.answer = answer\n",
    "        self.question = question\n",
    "        answerQuestionList = self.answerQuestionList.append({answer:question})\n",
    "        \n",
    "    def __del__(self):\n",
    "        return self.answerQuestionList\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "171cbba5",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "from random import randint\n",
    "class ExaminationPaper(AnswerQuestion):\n",
    "\n",
    "    a = \"\"\n",
    "    def __init__(self,score=0):\n",
    "        true = 0\n",
    "        false = 0\n",
    "        self.score = score\n",
    "        \n",
    "        questionScore = 100/len(self.answerQuestionList)\n",
    "        for index,question in enumerate(self.answerQuestionList):\n",
    "            print(f\"****************SORU-{index + 1}-********************\")\n",
    "            print(f\"{index + 1}.soru:\\t{list(question.values())[0]}\\n----------------------------------------\")\n",
    "            \n",
    "            showOptions = creatOptions(self.answerQuestionList,list(question.keys())[0])\n",
    "            optionsList=[\"A\",\"B\",\"C\",\"D\",\"E\"]\n",
    "            \n",
    "            \n",
    "            \n",
    "            \n",
    "            \n",
    "            for option in optionsList:\n",
    "                \n",
    "                print(f\"{option}) {showOptions[option]}\")\n",
    "                \n",
    "                if list(question.keys())[0] == showOptions[option]:\n",
    "                    global a\n",
    "                    a = option\n",
    "                    \n",
    "                \n",
    "                    \n",
    "            response = str(input(\"cevabınız?:\"))  \n",
    "                    \n",
    "                \n",
    "            if response.upper() == str(a) or response ==str(list(question.keys())[0]):     \n",
    "                self.score =self.score + 100/questionScore\n",
    "                print(\"TRUE\")\n",
    "            else:\n",
    "                print(\"FALSE!\")    \n",
    "                                            \n",
    "                \n",
    "            \n",
    "            \n",
    "            \n",
    "\n",
    "        \n",
    "        if not self.score == 0:\n",
    "            \n",
    "            true = self.score/questionScore\n",
    "            false = (100-self.score)/questionScore\n",
    "            \n",
    "        elif score == 0:\n",
    "            true = 0\n",
    "            false = questionScore\n",
    "            \n",
    "        \n",
    "        print(f\"****************SONUÇLAR::{int(true+false)}/{int(true)}::********************\")    \n",
    "        print(f\"{int(true)} doğru {int(false)} yanlış!\\nPuanınız:{self.score}\")\n",
    "                \n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "22235e11",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def creatOptions(liste,trueAnswer):\n",
    "    \n",
    "    answerList = getAnswer(liste)\n",
    "    answerList.remove(trueAnswer)\n",
    "    \n",
    "    optionsList=[\"A\",\"B\",\"C\",\"D\",\"E\"]\n",
    "    \n",
    "    showOptions = {}\n",
    "\n",
    "    trueAnswerIndex = randint(0,4)\n",
    "    showOptions[optionsList[trueAnswerIndex]]=trueAnswer\n",
    "    \n",
    "    for index,option in enumerate(optionsList):\n",
    "        answerIndex = randint(0,len(answerList)-1)\n",
    "        if index == trueAnswerIndex:\n",
    "            continue\n",
    "        \n",
    "        showOptions[option]=answerList[answerIndex]\n",
    "        answerList.remove(answerList[answerIndex])      \n",
    "        \n",
    "    return showOptions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f1f7cdd1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def getAnswer(liste):\n",
    "    optionList = list()\n",
    "    for index,question in enumerate(liste):\n",
    "        optionList.append(list(question.keys())[0])\n",
    "    \n",
    "    return optionList"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "68e17812",
   "metadata": {},
   "outputs": [],
   "source": [
    "soru1 = AnswerQuestion(\"6\",\"2*3\")\n",
    "soru2 = AnswerQuestion(\"8\",\"2*4\")\n",
    "soru3 = AnswerQuestion(\"10\",\"2*5\")\n",
    "soru4 = AnswerQuestion(\"12\",\"2*6\")\n",
    "soru5 = AnswerQuestion(\"14\",\"2*7\")\n",
    "soru6 = AnswerQuestion(\"16\",\"2*8\")\n",
    "soru7 = AnswerQuestion(\"remove\",\"Pythonda liste silme metodu nedir?\")\n",
    "soru8 = AnswerQuestion(\"Hata\",\"exceptional ne demektir\")\n",
    "soru9 = AnswerQuestion(\"Düşür\",\"Drop kelime anlamı\")\n",
    "soru10 = AnswerQuestion(\"1881\",\"M.Kemal Atatürk ün doğum yılı kaçtır\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "30361a15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'A'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = \"a\"\n",
    "a.upper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8334fcdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'6': '2*3'},\n",
       " {'8': '2*4'},\n",
       " {'10': '2*5'},\n",
       " {'12': '2*6'},\n",
       " {'14': '2*7'},\n",
       " {'16': '2*8'},\n",
       " {'remove': 'Pythonda liste silme metodu nedir?'},\n",
       " {'Hata': 'exceptional ne demektir'},\n",
       " {'Düşür': 'Drop kelime anlamı'},\n",
       " {'1881': 'M.Kemal Atatürk ün doğum yılı kaçtır'}]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "soru1.answerQuestionList"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "39251b2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "****************SORU-1-********************\n",
      "1.soru:\t\t2*3\n",
      "----------------------------------------\n",
      "A) 10\n",
      "B) remove\n",
      "C) 6\n",
      "D) 16\n",
      "E) 12\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-2-********************\n",
      "2.soru:\t\t2*4\n",
      "----------------------------------------\n",
      "A) 8\n",
      "B) 14\n",
      "C) 1881\n",
      "D) remove\n",
      "E) 16\n",
      "cevabınız?:a\n",
      "TRUE\n",
      "****************SORU-3-********************\n",
      "3.soru:\t\t2*5\n",
      "----------------------------------------\n",
      "A) 14\n",
      "B) Hata\n",
      "C) Düşür\n",
      "D) 1881\n",
      "E) 10\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-4-********************\n",
      "4.soru:\t\t2*6\n",
      "----------------------------------------\n",
      "A) 8\n",
      "B) 1881\n",
      "C) Düşür\n",
      "D) Hata\n",
      "E) 12\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-5-********************\n",
      "5.soru:\t\t2*7\n",
      "----------------------------------------\n",
      "A) 14\n",
      "B) Düşür\n",
      "C) 10\n",
      "D) 16\n",
      "E) 12\n",
      "cevabınız?:a\n",
      "TRUE\n",
      "****************SORU-6-********************\n",
      "6.soru:\t\t2*8\n",
      "----------------------------------------\n",
      "A) 6\n",
      "B) 8\n",
      "C) remove\n",
      "D) 16\n",
      "E) 14\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-7-********************\n",
      "7.soru:\t\tPythonda liste silme metodu nedir?\n",
      "----------------------------------------\n",
      "A) Hata\n",
      "B) 14\n",
      "C) 1881\n",
      "D) 8\n",
      "E) remove\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-8-********************\n",
      "8.soru:\t\texceptional ne demektir\n",
      "----------------------------------------\n",
      "A) Hata\n",
      "B) Düşür\n",
      "C) 10\n",
      "D) 16\n",
      "E) 6\n",
      "cevabınız?:a\n",
      "TRUE\n",
      "****************SORU-9-********************\n",
      "9.soru:\t\tDrop kelime anlamı\n",
      "----------------------------------------\n",
      "A) 16\n",
      "B) 1881\n",
      "C) 6\n",
      "D) 12\n",
      "E) Düşür\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SORU-10-********************\n",
      "10.soru:\t\tM.Kemal Atatürk ün doğum yılı kaçtır\n",
      "----------------------------------------\n",
      "A) 12\n",
      "B) remove\n",
      "C) Hata\n",
      "D) 1881\n",
      "E) Düşür\n",
      "cevabınız?:a\n",
      "FALSE!\n",
      "****************SONUÇLAR::10/3::********************\n",
      "3 doğru 7 yanlış!\n",
      "Puanınız:30.0\n"
     ]
    }
   ],
   "source": [
    "paper3 = ExaminationPaper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "244691d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "class takeTheExam(ExaminationPaper):\n",
    "    score = 0\n",
    "    def __init__(self,name,surName,no):\n",
    "        self.name = name\n",
    "        self.surName = surName\n",
    "        self.no = no\n",
    "    def startExam(self):\n",
    "        start = ExaminationPaper()\n",
    "        self.score = start.score\n",
    "        return print(f\"ADI:{self.name} SOYADI:{self.surName} NUMARASI:{self.no} PUAN:{self.score}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4a85d061",
   "metadata": {},
   "outputs": [],
   "source": [
    "S1 = takeTheExam(\"Zekeriya\",\"BASAN\",151101016)\n",
    "S2 = takeTheExam(\"Aslı\",\"Kal\",151101016)\n",
    "S3 = takeTheExam(\"Bade\",\"ELMAS\",151101016)\n",
    "S4 = takeTheExam(\"ASuman\",\"YALÇIN\",151101016)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "c77b010d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "****************SORU-1-********************\n",
      "1.soru:\t\t2*3\n",
      "----------------------------------------\n",
      "A) 12\n",
      "B) 1881\n",
      "C) Hata\n",
      "D) Düşür\n",
      "E) 6\n",
      "cevabınız?:6\n",
      "TRUE\n",
      "****************SORU-2-********************\n",
      "2.soru:\t\t2*4\n",
      "----------------------------------------\n",
      "A) 10\n",
      "B) 16\n",
      "C) 8\n",
      "D) Düşür\n",
      "E) Hata\n",
      "cevabınız?:8\n",
      "TRUE\n",
      "****************SORU-3-********************\n",
      "3.soru:\t\t2*5\n",
      "----------------------------------------\n",
      "A) 12\n",
      "B) 8\n",
      "C) remove\n",
      "D) 10\n",
      "E) Düşür\n",
      "cevabınız?:d\n",
      "TRUE\n",
      "****************SORU-4-********************\n",
      "4.soru:\t\t2*6\n",
      "----------------------------------------\n",
      "A) Hata\n",
      "B) 8\n",
      "C) 10\n",
      "D) 12\n",
      "E) 1881\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-5-********************\n",
      "5.soru:\t\t2*7\n",
      "----------------------------------------\n",
      "A) Hata\n",
      "B) remove\n",
      "C) 1881\n",
      "D) 14\n",
      "E) 6\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-6-********************\n",
      "6.soru:\t\t2*8\n",
      "----------------------------------------\n",
      "A) Hata\n",
      "B) 16\n",
      "C) 8\n",
      "D) remove\n",
      "E) 10\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-7-********************\n",
      "7.soru:\t\tPythonda liste silme metodu nedir?\n",
      "----------------------------------------\n",
      "A) remove\n",
      "B) 6\n",
      "C) 12\n",
      "D) Hata\n",
      "E) 16\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-8-********************\n",
      "8.soru:\t\texceptional ne demektir\n",
      "----------------------------------------\n",
      "A) remove\n",
      "B) 16\n",
      "C) Hata\n",
      "D) 8\n",
      "E) 14\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-9-********************\n",
      "9.soru:\t\tDrop kelime anlamı\n",
      "----------------------------------------\n",
      "A) Düşür\n",
      "B) 12\n",
      "C) 10\n",
      "D) 8\n",
      "E) 6\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SORU-10-********************\n",
      "10.soru:\t\tM.Kemal Atatürk ün doğum yılı kaçtır\n",
      "----------------------------------------\n",
      "A) 16\n",
      "B) Hata\n",
      "C) 12\n",
      "D) 1881\n",
      "E) 6\n",
      "cevabınız?:\n",
      "FALSE!\n",
      "****************SONUÇLAR::10/3::********************\n",
      "3 doğru 7 yanlış!\n",
      "Puanınız:30.0\n",
      "ADI:ASuman SOYADI:YALÇIN NUMARASI:151101016 PUAN:30.0\n"
     ]
    }
   ],
   "source": [
    "S4.startExam()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "ab503f61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'ASuman'"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "S4.name"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
